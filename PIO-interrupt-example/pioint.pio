;
; Periodic interrupts - Example for 'Knowing the RP2040' book
; Copyright (c) 2022, Daniel Quadros
;

.program pioint

    pull            // get delay
    mov y, osr      // save delay in Y
.wrap_target
loop1:
    mov x, y        // load delay in counter
loop2:
    jmp x-- loop2   // loop delay cycles
    irq 0 rel       // interrupt
.wrap


% c-sdk {
// Helper function to set a state machine to run our PIO program
static inline void pioint_program_init(PIO pio, uint sm, uint offset, 
    float freq) {

    // Get an initialized config structure
    pio_sm_config c = pioint_program_get_default_config(offset);

    // Configure the clock
    float div = clock_get_hz(clk_sys) / freq;
    sm_config_set_clkdiv(&c, div);

    // Enable our interrupt at IRQ0
    pio_set_irq0_source_enabled(pio, pis_interrupt0 + sm, true);
    
    // Clear IRQ flag before starting
    pio_interrupt_clear(pio, sm);

    // Load our configuration, and jump to the start of the program
    pio_sm_init(pio, sm, offset, &c);
    
    // Set the state machine running
    pio_sm_set_enabled(pio, sm, true);
}
%}
